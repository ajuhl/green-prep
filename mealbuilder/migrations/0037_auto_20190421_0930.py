# Generated by Django 2.1.7 on 2019-04-21 16:30

import datetime
from django.db import migrations, models
import django.db.models.deletion
from django.utils.timezone import utc


class Migration(migrations.Migration):

    dependencies = [
        ('userprofile', '0006_auto_20190421_0930'),
        ('mealbuilder', '0036_auto_20190419_1919'),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='MealFood',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.FloatField(null=True)),
                ('limit', models.PositiveSmallIntegerField(null=True)),
                ('protein', models.FloatField(null=True)),
                ('carbs', models.FloatField(null=True)),
                ('fat', models.FloatField(null=True)),
                ('calories', models.PositiveSmallIntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('create_date', models.DateTimeField()),
                ('protein_goal', models.PositiveSmallIntegerField()),
                ('carb_goal', models.PositiveSmallIntegerField()),
                ('fat_goal', models.PositiveSmallIntegerField()),
                ('protein_actual', models.FloatField()),
                ('carb_actual', models.FloatField()),
                ('fat_actual', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='SavedMeal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('creation_date', models.DateTimeField(default=datetime.datetime(2019, 4, 21, 16, 30, 8, 545862, tzinfo=utc))),
            ],
            options={
                'ordering': ['creation_date'],
            },
        ),
        migrations.CreateModel(
            name='SavedPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('create_date', models.DateTimeField()),
            ],
        ),
        migrations.DeleteModel(
            name='Day',
        ),
        migrations.RemoveField(
            model_name='mealitem',
            name='food',
        ),
        migrations.RemoveField(
            model_name='mealitem',
            name='meal',
        ),
        migrations.RenameField(
            model_name='meal',
            old_name='meal_name',
            new_name='name',
        ),
        migrations.RemoveField(
            model_name='meal',
            name='creator_id',
        ),
        migrations.RemoveField(
            model_name='meal',
            name='fat',
        ),
        migrations.AddField(
            model_name='meal',
            name='cholesterol',
            field=models.FloatField(default=-1),
        ),
        migrations.AddField(
            model_name='meal',
            name='magnesium',
            field=models.FloatField(default=-1),
        ),
        migrations.AddField(
            model_name='meal',
            name='potassium',
            field=models.FloatField(default=-1),
        ),
        migrations.AddField(
            model_name='meal',
            name='profile',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='userprofile.Profile'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='meal',
            name='sat_fat',
            field=models.FloatField(default=-1),
        ),
        migrations.AddField(
            model_name='meal',
            name='sodium',
            field=models.FloatField(default=-1),
        ),
        migrations.AddField(
            model_name='meal',
            name='sugars',
            field=models.FloatField(default=-1),
        ),
        migrations.AddField(
            model_name='meal',
            name='total_fat',
            field=models.FloatField(default=-1),
        ),
        migrations.AddField(
            model_name='meal',
            name='trans_fat',
            field=models.FloatField(default=-1),
        ),
        migrations.AlterField(
            model_name='food',
            name='calories',
            field=models.PositiveSmallIntegerField(),
        ),
        migrations.AlterField(
            model_name='meal',
            name='calories',
            field=models.PositiveSmallIntegerField(null=True),
        ),
        migrations.AlterField(
            model_name='meal',
            name='carb_goal',
            field=models.PositiveSmallIntegerField(null=True),
        ),
        migrations.AlterField(
            model_name='meal',
            name='carbs',
            field=models.FloatField(default=-1),
        ),
        migrations.AlterField(
            model_name='meal',
            name='creation_date',
            field=models.DateTimeField(default=datetime.datetime(2019, 4, 21, 16, 30, 8, 530240, tzinfo=utc)),
        ),
        migrations.AlterField(
            model_name='meal',
            name='fat_goal',
            field=models.PositiveSmallIntegerField(null=True),
        ),
        migrations.AlterField(
            model_name='meal',
            name='fiber',
            field=models.FloatField(default=-1),
        ),
        migrations.AlterField(
            model_name='meal',
            name='protein',
            field=models.FloatField(default=-1),
        ),
        migrations.AlterField(
            model_name='meal',
            name='protein_goal',
            field=models.PositiveSmallIntegerField(null=True),
        ),
        migrations.DeleteModel(
            name='MealItem',
        ),
        migrations.AddField(
            model_name='savedplan',
            name='meal',
            field=models.ManyToManyField(related_name='savedplans', to='mealbuilder.Meal'),
        ),
        migrations.AddField(
            model_name='savedplan',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='userprofile.Profile'),
        ),
        migrations.AddField(
            model_name='savedmeal',
            name='food',
            field=models.ManyToManyField(related_name='savedmeals', to='mealbuilder.Food'),
        ),
        migrations.AddField(
            model_name='savedmeal',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='userprofile.Profile'),
        ),
        migrations.AddField(
            model_name='plan',
            name='meal',
            field=models.ManyToManyField(related_name='plans', to='mealbuilder.Meal'),
        ),
        migrations.AddField(
            model_name='plan',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='userprofile.Profile'),
        ),
        migrations.AddField(
            model_name='mealfood',
            name='food',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mealfoods', to='mealbuilder.Food'),
        ),
        migrations.AddField(
            model_name='mealfood',
            name='meal',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mealfoods', to='mealbuilder.Meal'),
        ),
        migrations.AddField(
            model_name='meal',
            name='food',
            field=models.ManyToManyField(related_name='meals', through='mealbuilder.MealFood', to='mealbuilder.Food'),
        ),
    ]
